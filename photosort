#!/bin/sh

PHOTODIR=~/usr/pics/photos

usage() {
	cat << EOF
Usage: $(basename $0) -[hdr] <dir>
	r: run the sorting - default is dummy run to check what will happen
	d: destination directory suffix (e.g. '-d test' -> 'yyyy_mm_test')

	h: help
EOF
	exit 1
}

err() {
	echo "$@" > /dev/stderr
}

get_date() {
	DATE=$(file "$1" | grep -o '[0-9]\{4\}:[0-9]\{2\}')

	if [ -z $DATE ]; then
		case $(echo "$1" | grep -o '[A-Za-z]*' | head -n1) in
			IMG|VideoSnapshot) DATE=$(echo "$1" | grep -o '[0-9]\{6\}' | \
				head -n1 | sed 's/.\{4\}/&:/') ;;
			signal) DATE=$(echo "$1" | grep -o '[0-9]*' | \
				head -n2 | paste -d: -s) ;;
		esac
	fi
}

moving() {
	local FILE="$1"
	mv ${FILE%%.*}.* "$NEWDIR" && echo "moved $FILE.* to $NEWDIR"
}

sorting() {
	echo "start sorting"
	for f in $(ls .); do
		[ ! -f $f ] && continue

		get_date "$f"
		[ -z $DATE ] && err "not sorted: $f" && continue

		YEAR=$(echo $DATE | cut -d: -f1)
		MONTH=$(echo $DATE | cut -d: -f2)

		NEWDIR="$PHOTODIR"/${YEAR}_${MONTH}
		test ! -z $DEST && NEWDIR=${NEWDIR}_$DEST

		if [ $RUN ]; then
			[ ! -d $NEWDIR ] && mkdir "$NEWDIR" > /dev/null 2>&1
			moving "$f"
		else
			[ ! -d $NEWDIR ] && echo "creating $NEWDIR"
			echo "moving ${f%%.*}.* to $NEWDIR"
		fi
	done
}

while getopts "hd:r" OPT; do
	case $OPT in
		r) RUN=true ;;
		d) DEST=$OPTARG ;;
		*) usage ;;
	esac
done

shift $((OPTIND - 1))

[ ! -d "$1" ] && usage

cd "$1"
sorting

#!/usr/bin/python3

import json
import argparse
import sys
import os
import datetime

from pydbus import SystemBus

VAR_DIR = os.path.join(os.getenv('HOME'), 'var', 'signal')
CONFIG_DIR = os.getenv('XDG_CONFIG_HOME') if os.getenv('XDG_CONFIG_HOME') else os.path.join(os.getenv('HOME'), '.config')
DATA = dict()

def read_data():
    signal_config_path = os.path.join(CONFIG_DIR, 'signal', 'data')
    file_paths = [os.path.join(signal_config_path, f) for f in os.listdir(signal_config_path)]

    files = [f for f in file_paths if os.path.isfile(f)]

    with open(files[0], 'r') as f:
        data = json.loads(f.read())
        global DATA
        for entry in data['contactStore']['contacts']:
            DATA[entry['name']] = entry['number']
        for entry in data['groupStore']['groups']:
            DATA[f'group-{entry["name"]}'] = entry['groupId']

def write_to_file(file_name, msg):
    file_path = os.path.join(VAR_DIR, file_name)
    with open(file_path, 'a+') as f:
        f.write(msg + '\n')

def print_groups():
    for k in DATA.keys():
        if 'group-' in k:
            print(f'-> {k[6:]}')
    exit(0)

def print_contacts():
    for k in DATA.keys():
        if 'group-' not in k and k:
            print(f'-> {k}')
    exit(0)

def main():
    ap = argparse.ArgumentParser(
            description='Send messages using signal-cli on system-dbus',
            formatter_class=argparse.RawTextHelpFormatter)
    ap.add_argument('receiver', type=str, nargs='?', default=None)
    ap.add_argument('msg', type=str, nargs='*')
    ap.add_argument('-c', '--contacts',
            action='store_true', default=False,
            help='Print contacts')
    ap.add_argument('-g', '--groups',
            action='store_true', default=False,
            help='Print groups')

    args = ap.parse_args()
    read_data()

    if args.contacts:
        print_contacts()
    elif args.groups:
        print_groups()

    if not args.receiver:
        print('receiver required')
        ap.print_help()
        exit(0)

    if not os.path.isdir(VAR_DIR):
        os.makedirs(VAR_DIR)

    if args.msg:
        data = ' '.join(args.msg)
    else:
        data = sys.stdin.read()

    pos_receivers = list()

    for k in DATA.keys():
        if args.receiver.lower() in k.lower():
            pos_receivers.append(k)

    if len(pos_receivers) != 1:
        print(f'please be more specific: {pos_receivers}')
        exit(0)
    else:
        receiver = pos_receivers[0]

    bus = SystemBus()
    signal_dbus = bus.get('org.asamk.Signal')

    yesno = input(f'{receiver} ({DATA[receiver]}) : {data}\nCorrect? [Y/n] ')
    if yesno == 'N' or yesno == 'n':
        print('abort')
        exit(0)

    signal_dbus.sendMessage(data, [], [DATA[receiver]])
    write_to_file(receiver, f'[{datetime.datetime.now().strftime("%F %R:%S")}] >>> {data}'.strip())

if __name__ == '__main__':
    main()

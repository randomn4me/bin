#!/usr/bin/python

import datetime
import os
import sys

from os.path import join, isdir, isfile, basename

TMP_FILE = join(os.getenv('HOME'), 'tmp', '.timetracker')
TODAY = datetime.date.today()
BASE_DIR = join(os.getenv('HOME'), 'var', 'nextcloud', 'misc', 'timetracker')
STRF_STRING = '%H:%M'


def err(msg: str):
    print(f'[!] {msg}')
    exit(1)


def setup():
    dir = join(BASE_DIR, TODAY.strftime('%Y-%m'))

    if not isdir(dir):
        os.makedirs(dir)


def log():
    time = datetime.datetime.now()
    with open(join(str(BASE_DIR), TODAY.strftime('%Y-%m'), str(TODAY)), 'a') as f:
        f.write(f'{time.strftime(STRF_STRING)}\n')


def usage(program: str):
    print(f"{os.path.basename(program)}: <0|1|t YYYY-MM>")
    sys.exit(1)


def read_file_seconds(filepath: str):
    with open(filepath, 'r') as f:
        content = f.read().split('\n')

    times = [datetime.datetime.strptime(line, STRF_STRING) for line in content if line]
    if not (len(times) % 2) == 0:
        times.append(datetime.datetime.strptime(datetime.datetime.now().strftime(STRF_STRING),
            STRF_STRING))

    start_end = zip(times[0::2], times[1::2])
    total = sum((end - start for (start, end) in start_end), datetime.timedelta())
    return total.total_seconds()


def is_weekday(date_str: str):
    return datetime.datetime.fromisoformat(date_str).weekday() < 5


def get_time(total_seconds: int, num_files: int):
    compared = total_seconds - num_files * 28800 # seconds to work a day (8h)
    hours = int(float(compared) / 3600)
    minutes = int(float(compared - hours * 3600) / 60)
    return f'{hours}h {minutes}m'


def start_logging():
    if isfile(TMP_FILE):
        err('already logging')
    os.mknod(TMP_FILE)
    log()


def stop_logging():
    if not isfile(TMP_FILE):
        err('not logging')
    log()
    os.remove(TMP_FILE)


def total(date_str: str = None):
    if date_str:
        dirs = [join(BASE_DIR, date_str)]
        if not isdir(dirs[0]):
            err(f'no logs for {date_str}')
    else:
        dirs = [join(BASE_DIR, d) for d in os.listdir(BASE_DIR) if isdir(join(BASE_DIR, d))]

    files = [join(d, f) for d in dirs for f in os.listdir(d) if isfile(join(d, f))]
    seconds = sum([read_file_seconds(f) for f in files])

    print(get_time(seconds, sum(1 for f in files if is_weekday(basename(f)))))


if __name__ == "__main__":
    setup()

    if len(sys.argv) < 2:
        total()
    elif sys.argv[1] == "0":
        stop_logging()
    elif sys.argv[1] == "1":
        start_logging()
    elif sys.argv[1] == "t" and len(sys.argv) == 3:
        total(sys.argv[2])
    else:
        usage(sys.argv[0])
